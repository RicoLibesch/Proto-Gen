
# Stages der pipeline (Build zum bauen der Anwendung)
stages:
  - build
# - test
# - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE_1: "protogen_backend_node"
  DOCKER_IMAGE_2: "protogen_backend_db"
  DOCKER_IMAGE_3: "protogen_frontend_nextjs"

build_images:
  stage: build
  tags:
    - protogen-runner
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    IMAGE_TAG_BACKEND_NODE: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_1:$CI_COMMIT_REF_SLUG
    IMAGE_TAG_BACKEND_DB: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_2:$CI_COMMIT_REF_SLUG
    IMAGE_TAG_FRONTEND_NEXTJS: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_3:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $IMAGE_TAG_BACKEND_NODE -f backend/Dockerfile .
    - docker build -t $IMAGE_TAG_BACKEND_DB ./database
    - docker build -t $IMAGE_TAG_FRONTEND_NEXTJS -f Dockerfile .
  only:
    - feature/CI


# build_backend_node:
#  stage: build
#  tags:
#    - protogen-runner
#  services:
#    - name: docker:dind
#      entrypoint: ["env", "-u", "DOCKER_HOST"]
#      command: ["dockerd-entrypoint.sh"] 
#  variables:
#    IMAGE_TAG: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_1:$CI_COMMIT_REF_SLUG
#  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_TAG -f backend/Dockerfile .
#    - docker push $IMAGE_TAG
#  only:
#    - feature/CI 


#build_backend_db:
#  stage: build
#  tags:
#    - protogen-runner
#  services:
#    - name: docker:dind
#      entrypoint: ["env", "-u", "DOCKER_HOST"]
#      command: ["dockerd-entrypoint.sh"] 
#  variables:
#    IMAGE_TAG: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_2:$CI_COMMIT_REF_SLUG
#  script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker build -t $IMAGE_TAG ./database
#     - docker push $IMAGE_TAG
#  only:
#    - feature/CI 

#build_frontend_nextjs:
#  stage: build
#  tags:
#    - protogen-runner
#  services:
#    - name: docker:dind
#      entrypoint: ["env", "-u", "DOCKER_HOST"]
#      command: ["dockerd-entrypoint.sh"] 
#  variables:
#    IMAGE_TAG: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE_3:$CI_COMMIT_REF_SLUG
#  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_TAG -f Dockerfile .
#    - docker push $IMAGE_TAG
#  only:
#    - feature/CI 
