## Stages / In Welher Reihenfolge welche Jobs abgearbeitet werden sollen


  
stages:
  - build
# - test
# - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE_1: "protogen_backend_node"
  DOCKER_IMAGE_2: "protogen_backend_db"
  DOCKER_IMAGE_3: protogen_frontend_nextjs


build_backend_node:
  stage: build
  tags:
    - protogen-runner
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"] 
  script:
    - echo "$GITLAB_USER_LOGIN - Build"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE_1:latest -f backend/Dockerfile .
    - docker push $DOCKER_IMAGE_1
  only:
    - feature/CI 

build_backend_db:
  stage: build
  tags:
    - protogen-runner
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"] 
  script:
#    - echo "$GITLAB_USER_LOGIN - Build"
#    - docker build -t $DOCKER_IMAGE_2:latest -f database/Dockerfile ./database
#    - docker push $DOCKER_IMAGE_2
     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
     - docker build -t $CI_REGISTRY/$DOCKER_IMAGE_2:latest ./database
     - docker push $CI_REGISTRY/$DOCKER_IMAGE_2:latest
  only:
    - feature/CI 

build_frontend_nextjs:
  stage: build
  tags:
    - protogen-runner
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"] 
  script:
    - echo "$GITLAB_USER_LOGIN - Build"
    - docker build -t $DOCKER_IMAGE_3:latest -f Dockerfile .
    - docker push $DOCKER_IMAGE_3
  only:
    - feature/CI 
